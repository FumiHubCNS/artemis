//
// File generated by rootcint at Tue Jun 19 20:45:19 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME catcmd_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "catcmd_dict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TCatCmd TCatCmd;
      #else
      class TCatCmd  :  public ::TNamed {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TCatCmd() throw() {};
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TCatCmd_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TCatCmd_Dictionary();
   static void delete_TCatCmd(void *p);
   static void deleteArray_TCatCmd(void *p);
   static void destruct_TCatCmd(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmd*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TCatCmd) == sizeof(::ROOT::Shadow::TCatCmd));
      ::TCatCmd *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TCatCmd),0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmd", "TCatCmd.h", 18,
                  typeid(::TCatCmd), DefineBehavior(ptr, ptr),
                  &TCatCmd_ShowMembers, &TCatCmd_Dictionary, isa_proxy, 4,
                  sizeof(::TCatCmd) );
      instance.SetDelete(&delete_TCatCmd);
      instance.SetDeleteArray(&deleteArray_TCatCmd);
      instance.SetDestructor(&destruct_TCatCmd);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmd*)
   {
      return GenerateInitInstanceLocal((::TCatCmd*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmd*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TCatCmd_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TCatCmd*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TCatCmdFactory_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdFactory(void *p);
   static void deleteArray_TCatCmdFactory(void *p);
   static void destruct_TCatCmdFactory(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdFactory*)
   {
      ::TCatCmdFactory *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdFactory >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdFactory", ::TCatCmdFactory::Class_Version(), "./TCatCmdFactory.h", 17,
                  typeid(::TCatCmdFactory), DefineBehavior(ptr, ptr),
                  &::TCatCmdFactory::Dictionary, isa_proxy, 4,
                  sizeof(::TCatCmdFactory) );
      instance.SetDelete(&delete_TCatCmdFactory);
      instance.SetDeleteArray(&deleteArray_TCatCmdFactory);
      instance.SetDestructor(&destruct_TCatCmdFactory);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdFactory*)
   {
      return GenerateInitInstanceLocal((::TCatCmdFactory*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdFactory*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdHelp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdHelp(void *p);
   static void deleteArray_TCatCmdHelp(void *p);
   static void destruct_TCatCmdHelp(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdHelp*)
   {
      ::TCatCmdHelp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdHelp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdHelp", ::TCatCmdHelp::Class_Version(), "./TCatCmdHelp.h", 16,
                  typeid(::TCatCmdHelp), DefineBehavior(ptr, ptr),
                  &::TCatCmdHelp::Dictionary, isa_proxy, 4,
                  sizeof(::TCatCmdHelp) );
      instance.SetDelete(&delete_TCatCmdHelp);
      instance.SetDeleteArray(&deleteArray_TCatCmdHelp);
      instance.SetDestructor(&destruct_TCatCmdHelp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdHelp*)
   {
      return GenerateInitInstanceLocal((::TCatCmdHelp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdHelp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdHt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdHt(void *p);
   static void deleteArray_TCatCmdHt(void *p);
   static void destruct_TCatCmdHt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdHt*)
   {
      ::TCatCmdHt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdHt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdHt", ::TCatCmdHt::Class_Version(), "./TCatCmdHt.h", 17,
                  typeid(::TCatCmdHt), DefineBehavior(ptr, ptr),
                  &::TCatCmdHt::Dictionary, isa_proxy, 4,
                  sizeof(::TCatCmdHt) );
      instance.SetDelete(&delete_TCatCmdHt);
      instance.SetDeleteArray(&deleteArray_TCatCmdHt);
      instance.SetDestructor(&destruct_TCatCmdHt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdHt*)
   {
      return GenerateInitInstanceLocal((::TCatCmdHt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdHt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdHtp_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdHtp(void *p);
   static void deleteArray_TCatCmdHtp(void *p);
   static void destruct_TCatCmdHtp(void *p);
   static void streamer_TCatCmdHtp(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdHtp*)
   {
      ::TCatCmdHtp *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdHtp >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdHtp", ::TCatCmdHtp::Class_Version(), "./TCatCmdHtp.h", 16,
                  typeid(::TCatCmdHtp), DefineBehavior(ptr, ptr),
                  &::TCatCmdHtp::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdHtp) );
      instance.SetDelete(&delete_TCatCmdHtp);
      instance.SetDeleteArray(&deleteArray_TCatCmdHtp);
      instance.SetDestructor(&destruct_TCatCmdHtp);
      instance.SetStreamerFunc(&streamer_TCatCmdHtp);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdHtp*)
   {
      return GenerateInitInstanceLocal((::TCatCmdHtp*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdHtp*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdHb_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdHb(void *p);
   static void deleteArray_TCatCmdHb(void *p);
   static void destruct_TCatCmdHb(void *p);
   static void streamer_TCatCmdHb(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdHb*)
   {
      ::TCatCmdHb *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdHb >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdHb", ::TCatCmdHb::Class_Version(), "./TCatCmdHb.h", 16,
                  typeid(::TCatCmdHb), DefineBehavior(ptr, ptr),
                  &::TCatCmdHb::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdHb) );
      instance.SetDelete(&delete_TCatCmdHb);
      instance.SetDeleteArray(&deleteArray_TCatCmdHb);
      instance.SetDestructor(&destruct_TCatCmdHb);
      instance.SetStreamerFunc(&streamer_TCatCmdHb);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdHb*)
   {
      return GenerateInitInstanceLocal((::TCatCmdHb*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdHb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdHn_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdHn(void *p);
   static void deleteArray_TCatCmdHn(void *p);
   static void destruct_TCatCmdHn(void *p);
   static void streamer_TCatCmdHn(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdHn*)
   {
      ::TCatCmdHn *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdHn >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdHn", ::TCatCmdHn::Class_Version(), "./TCatCmdHn.h", 16,
                  typeid(::TCatCmdHn), DefineBehavior(ptr, ptr),
                  &::TCatCmdHn::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdHn) );
      instance.SetDelete(&delete_TCatCmdHn);
      instance.SetDeleteArray(&deleteArray_TCatCmdHn);
      instance.SetDestructor(&destruct_TCatCmdHn);
      instance.SetStreamerFunc(&streamer_TCatCmdHn);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdHn*)
   {
      return GenerateInitInstanceLocal((::TCatCmdHn*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdHn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdZone_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdZone(void *p);
   static void deleteArray_TCatCmdZone(void *p);
   static void destruct_TCatCmdZone(void *p);
   static void streamer_TCatCmdZone(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdZone*)
   {
      ::TCatCmdZone *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdZone >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdZone", ::TCatCmdZone::Class_Version(), "./TCatCmdZone.h", 16,
                  typeid(::TCatCmdZone), DefineBehavior(ptr, ptr),
                  &::TCatCmdZone::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdZone) );
      instance.SetDelete(&delete_TCatCmdZone);
      instance.SetDeleteArray(&deleteArray_TCatCmdZone);
      instance.SetDestructor(&destruct_TCatCmdZone);
      instance.SetStreamerFunc(&streamer_TCatCmdZone);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdZone*)
   {
      return GenerateInitInstanceLocal((::TCatCmdZone*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdZone*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdPr_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdPr(void *p);
   static void deleteArray_TCatCmdPr(void *p);
   static void destruct_TCatCmdPr(void *p);
   static void streamer_TCatCmdPr(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdPr*)
   {
      ::TCatCmdPr *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdPr >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdPr", ::TCatCmdPr::Class_Version(), "./TCatCmdPr.h", 19,
                  typeid(::TCatCmdPr), DefineBehavior(ptr, ptr),
                  &::TCatCmdPr::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdPr) );
      instance.SetDelete(&delete_TCatCmdPr);
      instance.SetDeleteArray(&deleteArray_TCatCmdPr);
      instance.SetDestructor(&destruct_TCatCmdPr);
      instance.SetStreamerFunc(&streamer_TCatCmdPr);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdPr*)
   {
      return GenerateInitInstanceLocal((::TCatCmdPr*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdPr*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdPrx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdPrx(void *p);
   static void deleteArray_TCatCmdPrx(void *p);
   static void destruct_TCatCmdPrx(void *p);
   static void streamer_TCatCmdPrx(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdPrx*)
   {
      ::TCatCmdPrx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdPrx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdPrx", ::TCatCmdPrx::Class_Version(), "./TCatCmdPrx.h", 16,
                  typeid(::TCatCmdPrx), DefineBehavior(ptr, ptr),
                  &::TCatCmdPrx::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdPrx) );
      instance.SetDelete(&delete_TCatCmdPrx);
      instance.SetDeleteArray(&deleteArray_TCatCmdPrx);
      instance.SetDestructor(&destruct_TCatCmdPrx);
      instance.SetStreamerFunc(&streamer_TCatCmdPrx);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdPrx*)
   {
      return GenerateInitInstanceLocal((::TCatCmdPrx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdPrx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdPry_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdPry(void *p);
   static void deleteArray_TCatCmdPry(void *p);
   static void destruct_TCatCmdPry(void *p);
   static void streamer_TCatCmdPry(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdPry*)
   {
      ::TCatCmdPry *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdPry >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdPry", ::TCatCmdPry::Class_Version(), "./TCatCmdPry.h", 16,
                  typeid(::TCatCmdPry), DefineBehavior(ptr, ptr),
                  &::TCatCmdPry::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdPry) );
      instance.SetDelete(&delete_TCatCmdPry);
      instance.SetDeleteArray(&deleteArray_TCatCmdPry);
      instance.SetDestructor(&destruct_TCatCmdPry);
      instance.SetStreamerFunc(&streamer_TCatCmdPry);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdPry*)
   {
      return GenerateInitInstanceLocal((::TCatCmdPry*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdPry*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdBn_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdBn(void *p);
   static void deleteArray_TCatCmdBn(void *p);
   static void destruct_TCatCmdBn(void *p);
   static void streamer_TCatCmdBn(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdBn*)
   {
      ::TCatCmdBn *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdBn >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdBn", ::TCatCmdBn::Class_Version(), "./TCatCmdBn.h", 19,
                  typeid(::TCatCmdBn), DefineBehavior(ptr, ptr),
                  &::TCatCmdBn::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdBn) );
      instance.SetDelete(&delete_TCatCmdBn);
      instance.SetDeleteArray(&deleteArray_TCatCmdBn);
      instance.SetDestructor(&destruct_TCatCmdBn);
      instance.SetStreamerFunc(&streamer_TCatCmdBn);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdBn*)
   {
      return GenerateInitInstanceLocal((::TCatCmdBn*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdBn*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdBnx_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdBnx(void *p);
   static void deleteArray_TCatCmdBnx(void *p);
   static void destruct_TCatCmdBnx(void *p);
   static void streamer_TCatCmdBnx(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdBnx*)
   {
      ::TCatCmdBnx *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdBnx >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdBnx", ::TCatCmdBnx::Class_Version(), "./TCatCmdBnx.h", 16,
                  typeid(::TCatCmdBnx), DefineBehavior(ptr, ptr),
                  &::TCatCmdBnx::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdBnx) );
      instance.SetDelete(&delete_TCatCmdBnx);
      instance.SetDeleteArray(&deleteArray_TCatCmdBnx);
      instance.SetDestructor(&destruct_TCatCmdBnx);
      instance.SetStreamerFunc(&streamer_TCatCmdBnx);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdBnx*)
   {
      return GenerateInitInstanceLocal((::TCatCmdBnx*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdBnx*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdBny_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdBny(void *p);
   static void deleteArray_TCatCmdBny(void *p);
   static void destruct_TCatCmdBny(void *p);
   static void streamer_TCatCmdBny(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdBny*)
   {
      ::TCatCmdBny *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdBny >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdBny", ::TCatCmdBny::Class_Version(), "./TCatCmdBny.h", 16,
                  typeid(::TCatCmdBny), DefineBehavior(ptr, ptr),
                  &::TCatCmdBny::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdBny) );
      instance.SetDelete(&delete_TCatCmdBny);
      instance.SetDeleteArray(&deleteArray_TCatCmdBny);
      instance.SetDestructor(&destruct_TCatCmdBny);
      instance.SetStreamerFunc(&streamer_TCatCmdBny);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdBny*)
   {
      return GenerateInitInstanceLocal((::TCatCmdBny*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdBny*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdSl_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdSl(void *p);
   static void deleteArray_TCatCmdSl(void *p);
   static void destruct_TCatCmdSl(void *p);
   static void streamer_TCatCmdSl(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdSl*)
   {
      ::TCatCmdSl *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdSl >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdSl", ::TCatCmdSl::Class_Version(), "./TCatCmdSl.h", 19,
                  typeid(::TCatCmdSl), DefineBehavior(ptr, ptr),
                  &::TCatCmdSl::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdSl) );
      instance.SetDelete(&delete_TCatCmdSl);
      instance.SetDeleteArray(&deleteArray_TCatCmdSl);
      instance.SetDestructor(&destruct_TCatCmdSl);
      instance.SetStreamerFunc(&streamer_TCatCmdSl);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdSl*)
   {
      return GenerateInitInstanceLocal((::TCatCmdSl*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdSl*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdSly_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdSly(void *p);
   static void deleteArray_TCatCmdSly(void *p);
   static void destruct_TCatCmdSly(void *p);
   static void streamer_TCatCmdSly(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdSly*)
   {
      ::TCatCmdSly *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdSly >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdSly", ::TCatCmdSly::Class_Version(), "./TCatCmdSly.h", 16,
                  typeid(::TCatCmdSly), DefineBehavior(ptr, ptr),
                  &::TCatCmdSly::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdSly) );
      instance.SetDelete(&delete_TCatCmdSly);
      instance.SetDeleteArray(&deleteArray_TCatCmdSly);
      instance.SetDestructor(&destruct_TCatCmdSly);
      instance.SetStreamerFunc(&streamer_TCatCmdSly);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdSly*)
   {
      return GenerateInitInstanceLocal((::TCatCmdSly*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdSly*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdLs_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdLs(void *p);
   static void deleteArray_TCatCmdLs(void *p);
   static void destruct_TCatCmdLs(void *p);
   static void streamer_TCatCmdLs(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdLs*)
   {
      ::TCatCmdLs *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdLs >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdLs", ::TCatCmdLs::Class_Version(), "./TCatCmdLs.h", 16,
                  typeid(::TCatCmdLs), DefineBehavior(ptr, ptr),
                  &::TCatCmdLs::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdLs) );
      instance.SetDelete(&delete_TCatCmdLs);
      instance.SetDeleteArray(&deleteArray_TCatCmdLs);
      instance.SetDestructor(&destruct_TCatCmdLs);
      instance.SetStreamerFunc(&streamer_TCatCmdLs);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdLs*)
   {
      return GenerateInitInstanceLocal((::TCatCmdLs*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdLs*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdLoopAdd_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdLoopAdd(void *p);
   static void deleteArray_TCatCmdLoopAdd(void *p);
   static void destruct_TCatCmdLoopAdd(void *p);
   static void streamer_TCatCmdLoopAdd(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdLoopAdd*)
   {
      ::TCatCmdLoopAdd *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdLoopAdd >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdLoopAdd", ::TCatCmdLoopAdd::Class_Version(), "./TCatCmdLoopAdd.h", 16,
                  typeid(::TCatCmdLoopAdd), DefineBehavior(ptr, ptr),
                  &::TCatCmdLoopAdd::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdLoopAdd) );
      instance.SetDelete(&delete_TCatCmdLoopAdd);
      instance.SetDeleteArray(&deleteArray_TCatCmdLoopAdd);
      instance.SetDestructor(&destruct_TCatCmdLoopAdd);
      instance.SetStreamerFunc(&streamer_TCatCmdLoopAdd);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdLoopAdd*)
   {
      return GenerateInitInstanceLocal((::TCatCmdLoopAdd*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdLoopAdd*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdLoopSuspend_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdLoopSuspend(void *p);
   static void deleteArray_TCatCmdLoopSuspend(void *p);
   static void destruct_TCatCmdLoopSuspend(void *p);
   static void streamer_TCatCmdLoopSuspend(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdLoopSuspend*)
   {
      ::TCatCmdLoopSuspend *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdLoopSuspend >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdLoopSuspend", ::TCatCmdLoopSuspend::Class_Version(), "./TCatCmdLoopSuspend.h", 18,
                  typeid(::TCatCmdLoopSuspend), DefineBehavior(ptr, ptr),
                  &::TCatCmdLoopSuspend::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdLoopSuspend) );
      instance.SetDelete(&delete_TCatCmdLoopSuspend);
      instance.SetDeleteArray(&deleteArray_TCatCmdLoopSuspend);
      instance.SetDestructor(&destruct_TCatCmdLoopSuspend);
      instance.SetStreamerFunc(&streamer_TCatCmdLoopSuspend);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdLoopSuspend*)
   {
      return GenerateInitInstanceLocal((::TCatCmdLoopSuspend*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdLoopSuspend*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdLoopResume_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdLoopResume(void *p);
   static void deleteArray_TCatCmdLoopResume(void *p);
   static void destruct_TCatCmdLoopResume(void *p);
   static void streamer_TCatCmdLoopResume(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdLoopResume*)
   {
      ::TCatCmdLoopResume *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdLoopResume >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdLoopResume", ::TCatCmdLoopResume::Class_Version(), "./TCatCmdLoopResume.h", 16,
                  typeid(::TCatCmdLoopResume), DefineBehavior(ptr, ptr),
                  &::TCatCmdLoopResume::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdLoopResume) );
      instance.SetDelete(&delete_TCatCmdLoopResume);
      instance.SetDeleteArray(&deleteArray_TCatCmdLoopResume);
      instance.SetDestructor(&destruct_TCatCmdLoopResume);
      instance.SetStreamerFunc(&streamer_TCatCmdLoopResume);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdLoopResume*)
   {
      return GenerateInitInstanceLocal((::TCatCmdLoopResume*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdLoopResume*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TCatCmdCd_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TCatCmdCd(void *p);
   static void deleteArray_TCatCmdCd(void *p);
   static void destruct_TCatCmdCd(void *p);
   static void streamer_TCatCmdCd(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCatCmdCd*)
   {
      ::TCatCmdCd *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCatCmdCd >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCatCmdCd", ::TCatCmdCd::Class_Version(), "./TCatCmdCd.h", 16,
                  typeid(::TCatCmdCd), DefineBehavior(ptr, ptr),
                  &::TCatCmdCd::Dictionary, isa_proxy, 0,
                  sizeof(::TCatCmdCd) );
      instance.SetDelete(&delete_TCatCmdCd);
      instance.SetDeleteArray(&deleteArray_TCatCmdCd);
      instance.SetDestructor(&destruct_TCatCmdCd);
      instance.SetStreamerFunc(&streamer_TCatCmdCd);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCatCmdCd*)
   {
      return GenerateInitInstanceLocal((::TCatCmdCd*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCatCmdCd*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TCatCmdFactory::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdFactory::Class_Name()
{
   return "TCatCmdFactory";
}

//______________________________________________________________________________
const char *TCatCmdFactory::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdFactory*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdFactory::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdFactory*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdFactory::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdFactory*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdFactory::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdFactory*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdHelp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdHelp::Class_Name()
{
   return "TCatCmdHelp";
}

//______________________________________________________________________________
const char *TCatCmdHelp::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHelp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdHelp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHelp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdHelp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHelp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdHelp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHelp*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdHt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdHt::Class_Name()
{
   return "TCatCmdHt";
}

//______________________________________________________________________________
const char *TCatCmdHt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdHt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdHt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdHt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdHtp::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdHtp::Class_Name()
{
   return "TCatCmdHtp";
}

//______________________________________________________________________________
const char *TCatCmdHtp::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHtp*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdHtp::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHtp*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdHtp::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHtp*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdHtp::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHtp*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdHb::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdHb::Class_Name()
{
   return "TCatCmdHb";
}

//______________________________________________________________________________
const char *TCatCmdHb::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdHb::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdHb::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdHb::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHb*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdHn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdHn::Class_Name()
{
   return "TCatCmdHn";
}

//______________________________________________________________________________
const char *TCatCmdHn::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdHn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdHn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdHn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdHn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdZone::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdZone::Class_Name()
{
   return "TCatCmdZone";
}

//______________________________________________________________________________
const char *TCatCmdZone::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdZone*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdZone::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdZone*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdZone::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdZone*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdZone::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdZone*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdPr::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdPr::Class_Name()
{
   return "TCatCmdPr";
}

//______________________________________________________________________________
const char *TCatCmdPr::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPr*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdPr::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPr*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdPr::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPr*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdPr::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPr*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdPrx::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdPrx::Class_Name()
{
   return "TCatCmdPrx";
}

//______________________________________________________________________________
const char *TCatCmdPrx::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPrx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdPrx::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPrx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdPrx::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPrx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdPrx::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPrx*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdPry::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdPry::Class_Name()
{
   return "TCatCmdPry";
}

//______________________________________________________________________________
const char *TCatCmdPry::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPry*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdPry::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPry*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdPry::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPry*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdPry::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdPry*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdBn::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdBn::Class_Name()
{
   return "TCatCmdBn";
}

//______________________________________________________________________________
const char *TCatCmdBn::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBn*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdBn::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBn*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdBn::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBn*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdBn::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBn*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdBnx::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdBnx::Class_Name()
{
   return "TCatCmdBnx";
}

//______________________________________________________________________________
const char *TCatCmdBnx::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBnx*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdBnx::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBnx*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdBnx::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBnx*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdBnx::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBnx*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdBny::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdBny::Class_Name()
{
   return "TCatCmdBny";
}

//______________________________________________________________________________
const char *TCatCmdBny::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBny*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdBny::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBny*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdBny::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBny*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdBny::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdBny*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdSl::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdSl::Class_Name()
{
   return "TCatCmdSl";
}

//______________________________________________________________________________
const char *TCatCmdSl::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSl*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdSl::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSl*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdSl::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSl*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdSl::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSl*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdSly::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdSly::Class_Name()
{
   return "TCatCmdSly";
}

//______________________________________________________________________________
const char *TCatCmdSly::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSly*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdSly::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSly*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdSly::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSly*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdSly::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdSly*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdLs::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdLs::Class_Name()
{
   return "TCatCmdLs";
}

//______________________________________________________________________________
const char *TCatCmdLs::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLs*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdLs::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLs*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdLs::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLs*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdLs::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLs*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdLoopAdd::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdLoopAdd::Class_Name()
{
   return "TCatCmdLoopAdd";
}

//______________________________________________________________________________
const char *TCatCmdLoopAdd::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopAdd*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdLoopAdd::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopAdd*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdLoopAdd::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopAdd*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdLoopAdd::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopAdd*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdLoopSuspend::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdLoopSuspend::Class_Name()
{
   return "TCatCmdLoopSuspend";
}

//______________________________________________________________________________
const char *TCatCmdLoopSuspend::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopSuspend*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdLoopSuspend::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopSuspend*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdLoopSuspend::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopSuspend*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdLoopSuspend::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopSuspend*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdLoopResume::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdLoopResume::Class_Name()
{
   return "TCatCmdLoopResume";
}

//______________________________________________________________________________
const char *TCatCmdLoopResume::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopResume*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdLoopResume::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopResume*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdLoopResume::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopResume*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdLoopResume::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdLoopResume*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TCatCmdCd::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCatCmdCd::Class_Name()
{
   return "TCatCmdCd";
}

//______________________________________________________________________________
const char *TCatCmdCd::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdCd*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCatCmdCd::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdCd*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCatCmdCd::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdCd*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCatCmdCd::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmdCd*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
namespace ROOT {
   void TCatCmd_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TCatCmd.
      typedef ::ROOT::Shadow::TCatCmd ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TCatCmd*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      sobj->TNamed::ShowMembers(R__insp);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmd(void *p) {
      delete ((::TCatCmd*)p);
   }
   static void deleteArray_TCatCmd(void *p) {
      delete [] ((::TCatCmd*)p);
   }
   static void destruct_TCatCmd(void *p) {
      typedef ::TCatCmd current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCatCmd

//______________________________________________________________________________
void TCatCmdHelp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdHelp.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCatCmdHelp::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCatCmdHelp::Class(),this);
   }
}

//______________________________________________________________________________
void TCatCmdHelp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdHelp.
      TClass *R__cl = ::TCatCmdHelp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdHelp(void *p) {
      delete ((::TCatCmdHelp*)p);
   }
   static void deleteArray_TCatCmdHelp(void *p) {
      delete [] ((::TCatCmdHelp*)p);
   }
   static void destruct_TCatCmdHelp(void *p) {
      typedef ::TCatCmdHelp current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCatCmdHelp

//______________________________________________________________________________
void TCatCmdHt::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdHt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCatCmdHt::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCatCmdHt::Class(),this);
   }
}

//______________________________________________________________________________
void TCatCmdHt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdHt.
      TClass *R__cl = ::TCatCmdHt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdHt(void *p) {
      delete ((::TCatCmdHt*)p);
   }
   static void deleteArray_TCatCmdHt(void *p) {
      delete [] ((::TCatCmdHt*)p);
   }
   static void destruct_TCatCmdHt(void *p) {
      typedef ::TCatCmdHt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCatCmdHt

//______________________________________________________________________________
void TCatCmdHn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdHn.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdHn::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdHn::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdHn::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdHn.
      TClass *R__cl = ::TCatCmdHn::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdHn(void *p) {
      delete ((::TCatCmdHn*)p);
   }
   static void deleteArray_TCatCmdHn(void *p) {
      delete [] ((::TCatCmdHn*)p);
   }
   static void destruct_TCatCmdHn(void *p) {
      typedef ::TCatCmdHn current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdHn(TBuffer &buf, void *obj) {
      ((::TCatCmdHn*)obj)->::TCatCmdHn::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdHn

//______________________________________________________________________________
void TCatCmdHb::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdHb.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdHb::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdHb::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdHb::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdHb.
      TClass *R__cl = ::TCatCmdHb::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdHb(void *p) {
      delete ((::TCatCmdHb*)p);
   }
   static void deleteArray_TCatCmdHb(void *p) {
      delete [] ((::TCatCmdHb*)p);
   }
   static void destruct_TCatCmdHb(void *p) {
      typedef ::TCatCmdHb current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdHb(TBuffer &buf, void *obj) {
      ((::TCatCmdHb*)obj)->::TCatCmdHb::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdHb

//______________________________________________________________________________
void TCatCmdHtp::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdHtp.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdHtp::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdHtp::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdHtp::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdHtp.
      TClass *R__cl = ::TCatCmdHtp::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdHtp(void *p) {
      delete ((::TCatCmdHtp*)p);
   }
   static void deleteArray_TCatCmdHtp(void *p) {
      delete [] ((::TCatCmdHtp*)p);
   }
   static void destruct_TCatCmdHtp(void *p) {
      typedef ::TCatCmdHtp current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdHtp(TBuffer &buf, void *obj) {
      ((::TCatCmdHtp*)obj)->::TCatCmdHtp::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdHtp

//______________________________________________________________________________
void TCatCmdPr::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdPr.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      void *ptr_fAxis = (void*)&fAxis;
      R__b >> *reinterpret_cast<Int_t*>(ptr_fAxis);
      R__b.CheckByteCount(R__s, R__c, TCatCmdPr::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdPr::IsA(), kTRUE);
      R__b << (Int_t)fAxis;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdPr::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdPr.
      TClass *R__cl = ::TCatCmdPr::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxis", &fAxis);
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdPr(void *p) {
      delete ((::TCatCmdPr*)p);
   }
   static void deleteArray_TCatCmdPr(void *p) {
      delete [] ((::TCatCmdPr*)p);
   }
   static void destruct_TCatCmdPr(void *p) {
      typedef ::TCatCmdPr current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdPr(TBuffer &buf, void *obj) {
      ((::TCatCmdPr*)obj)->::TCatCmdPr::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdPr

//______________________________________________________________________________
void TCatCmdPrx::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdPrx.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TCatCmdPr::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TCatCmdPrx::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdPrx::IsA(), kTRUE);
      TCatCmdPr::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdPrx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdPrx.
      TClass *R__cl = ::TCatCmdPrx::IsA();
      if (R__cl || R__insp.IsA()) { }
      TCatCmdPr::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdPrx(void *p) {
      delete ((::TCatCmdPrx*)p);
   }
   static void deleteArray_TCatCmdPrx(void *p) {
      delete [] ((::TCatCmdPrx*)p);
   }
   static void destruct_TCatCmdPrx(void *p) {
      typedef ::TCatCmdPrx current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdPrx(TBuffer &buf, void *obj) {
      ((::TCatCmdPrx*)obj)->::TCatCmdPrx::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdPrx

//______________________________________________________________________________
void TCatCmdPry::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdPry.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TCatCmdPr::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TCatCmdPry::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdPry::IsA(), kTRUE);
      TCatCmdPr::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdPry::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdPry.
      TClass *R__cl = ::TCatCmdPry::IsA();
      if (R__cl || R__insp.IsA()) { }
      TCatCmdPr::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdPry(void *p) {
      delete ((::TCatCmdPry*)p);
   }
   static void deleteArray_TCatCmdPry(void *p) {
      delete [] ((::TCatCmdPry*)p);
   }
   static void destruct_TCatCmdPry(void *p) {
      typedef ::TCatCmdPry current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdPry(TBuffer &buf, void *obj) {
      ((::TCatCmdPry*)obj)->::TCatCmdPry::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdPry

//______________________________________________________________________________
void TCatCmdBn::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdBn.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      void *ptr_fAxis = (void*)&fAxis;
      R__b >> *reinterpret_cast<Int_t*>(ptr_fAxis);
      R__b.CheckByteCount(R__s, R__c, TCatCmdBn::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdBn::IsA(), kTRUE);
      R__b << (Int_t)fAxis;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdBn::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdBn.
      TClass *R__cl = ::TCatCmdBn::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxis", &fAxis);
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdBn(void *p) {
      delete ((::TCatCmdBn*)p);
   }
   static void deleteArray_TCatCmdBn(void *p) {
      delete [] ((::TCatCmdBn*)p);
   }
   static void destruct_TCatCmdBn(void *p) {
      typedef ::TCatCmdBn current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdBn(TBuffer &buf, void *obj) {
      ((::TCatCmdBn*)obj)->::TCatCmdBn::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdBn

//______________________________________________________________________________
void TCatCmdBnx::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdBnx.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TCatCmdBn::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TCatCmdBnx::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdBnx::IsA(), kTRUE);
      TCatCmdBn::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdBnx::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdBnx.
      TClass *R__cl = ::TCatCmdBnx::IsA();
      if (R__cl || R__insp.IsA()) { }
      TCatCmdBn::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdBnx(void *p) {
      delete ((::TCatCmdBnx*)p);
   }
   static void deleteArray_TCatCmdBnx(void *p) {
      delete [] ((::TCatCmdBnx*)p);
   }
   static void destruct_TCatCmdBnx(void *p) {
      typedef ::TCatCmdBnx current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdBnx(TBuffer &buf, void *obj) {
      ((::TCatCmdBnx*)obj)->::TCatCmdBnx::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdBnx

//______________________________________________________________________________
void TCatCmdBny::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdBny.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TCatCmdBn::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TCatCmdBny::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdBny::IsA(), kTRUE);
      TCatCmdBn::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdBny::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdBny.
      TClass *R__cl = ::TCatCmdBny::IsA();
      if (R__cl || R__insp.IsA()) { }
      TCatCmdBn::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdBny(void *p) {
      delete ((::TCatCmdBny*)p);
   }
   static void deleteArray_TCatCmdBny(void *p) {
      delete [] ((::TCatCmdBny*)p);
   }
   static void destruct_TCatCmdBny(void *p) {
      typedef ::TCatCmdBny current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdBny(TBuffer &buf, void *obj) {
      ((::TCatCmdBny*)obj)->::TCatCmdBny::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdBny

//______________________________________________________________________________
void TCatCmdSl::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdSl.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      void *ptr_fAxis = (void*)&fAxis;
      R__b >> *reinterpret_cast<Int_t*>(ptr_fAxis);
      R__b.CheckByteCount(R__s, R__c, TCatCmdSl::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdSl::IsA(), kTRUE);
      R__b << (Int_t)fAxis;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdSl::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdSl.
      TClass *R__cl = ::TCatCmdSl::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAxis", &fAxis);
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdSl(void *p) {
      delete ((::TCatCmdSl*)p);
   }
   static void deleteArray_TCatCmdSl(void *p) {
      delete [] ((::TCatCmdSl*)p);
   }
   static void destruct_TCatCmdSl(void *p) {
      typedef ::TCatCmdSl current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdSl(TBuffer &buf, void *obj) {
      ((::TCatCmdSl*)obj)->::TCatCmdSl::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdSl

//______________________________________________________________________________
void TCatCmdSly::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdSly.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TCatCmdSl::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, TCatCmdSly::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdSly::IsA(), kTRUE);
      TCatCmdSl::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdSly::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdSly.
      TClass *R__cl = ::TCatCmdSly::IsA();
      if (R__cl || R__insp.IsA()) { }
      TCatCmdSl::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdSly(void *p) {
      delete ((::TCatCmdSly*)p);
   }
   static void deleteArray_TCatCmdSly(void *p) {
      delete [] ((::TCatCmdSly*)p);
   }
   static void destruct_TCatCmdSly(void *p) {
      typedef ::TCatCmdSly current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdSly(TBuffer &buf, void *obj) {
      ((::TCatCmdSly*)obj)->::TCatCmdSly::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdSly

//______________________________________________________________________________
void TCatCmdZone::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdZone.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdZone::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdZone::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdZone::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdZone.
      TClass *R__cl = ::TCatCmdZone::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdZone(void *p) {
      delete ((::TCatCmdZone*)p);
   }
   static void deleteArray_TCatCmdZone(void *p) {
      delete [] ((::TCatCmdZone*)p);
   }
   static void destruct_TCatCmdZone(void *p) {
      typedef ::TCatCmdZone current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdZone(TBuffer &buf, void *obj) {
      ((::TCatCmdZone*)obj)->::TCatCmdZone::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdZone

//______________________________________________________________________________
void TCatCmdLs::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdLs.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdLs::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdLs::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdLs::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdLs.
      TClass *R__cl = ::TCatCmdLs::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdLs(void *p) {
      delete ((::TCatCmdLs*)p);
   }
   static void deleteArray_TCatCmdLs(void *p) {
      delete [] ((::TCatCmdLs*)p);
   }
   static void destruct_TCatCmdLs(void *p) {
      typedef ::TCatCmdLs current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdLs(TBuffer &buf, void *obj) {
      ((::TCatCmdLs*)obj)->::TCatCmdLs::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdLs

//______________________________________________________________________________
void TCatCmdCd::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdCd.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdCd::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdCd::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdCd::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdCd.
      TClass *R__cl = ::TCatCmdCd::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdCd(void *p) {
      delete ((::TCatCmdCd*)p);
   }
   static void deleteArray_TCatCmdCd(void *p) {
      delete [] ((::TCatCmdCd*)p);
   }
   static void destruct_TCatCmdCd(void *p) {
      typedef ::TCatCmdCd current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdCd(TBuffer &buf, void *obj) {
      ((::TCatCmdCd*)obj)->::TCatCmdCd::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdCd

//______________________________________________________________________________
void TCatCmdLoopAdd::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdLoopAdd.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdLoopAdd::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdLoopAdd::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdLoopAdd::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdLoopAdd.
      TClass *R__cl = ::TCatCmdLoopAdd::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdLoopAdd(void *p) {
      delete ((::TCatCmdLoopAdd*)p);
   }
   static void deleteArray_TCatCmdLoopAdd(void *p) {
      delete [] ((::TCatCmdLoopAdd*)p);
   }
   static void destruct_TCatCmdLoopAdd(void *p) {
      typedef ::TCatCmdLoopAdd current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdLoopAdd(TBuffer &buf, void *obj) {
      ((::TCatCmdLoopAdd*)obj)->::TCatCmdLoopAdd::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdLoopAdd

//______________________________________________________________________________
void TCatCmdLoopSuspend::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdLoopSuspend.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdLoopSuspend::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdLoopSuspend::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdLoopSuspend::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdLoopSuspend.
      TClass *R__cl = ::TCatCmdLoopSuspend::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdLoopSuspend(void *p) {
      delete ((::TCatCmdLoopSuspend*)p);
   }
   static void deleteArray_TCatCmdLoopSuspend(void *p) {
      delete [] ((::TCatCmdLoopSuspend*)p);
   }
   static void destruct_TCatCmdLoopSuspend(void *p) {
      typedef ::TCatCmdLoopSuspend current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdLoopSuspend(TBuffer &buf, void *obj) {
      ((::TCatCmdLoopSuspend*)obj)->::TCatCmdLoopSuspend::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdLoopSuspend

//______________________________________________________________________________
void TCatCmdLoopResume::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdLoopResume.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b.CheckByteCount(R__s, R__c, TCatCmdLoopResume::IsA());
   } else {
      R__c = R__b.WriteVersion(TCatCmdLoopResume::IsA(), kTRUE);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCatCmdLoopResume::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdLoopResume.
      TClass *R__cl = ::TCatCmdLoopResume::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("TCatCmd", ( ::TCatCmd *) (this ), false);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdLoopResume(void *p) {
      delete ((::TCatCmdLoopResume*)p);
   }
   static void deleteArray_TCatCmdLoopResume(void *p) {
      delete [] ((::TCatCmdLoopResume*)p);
   }
   static void destruct_TCatCmdLoopResume(void *p) {
      typedef ::TCatCmdLoopResume current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCatCmdLoopResume(TBuffer &buf, void *obj) {
      ((::TCatCmdLoopResume*)obj)->::TCatCmdLoopResume::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCatCmdLoopResume

//______________________________________________________________________________
void TCatCmdFactory::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCatCmdFactory.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TCatCmdFactory::Class(),this);
   } else {
      R__b.WriteClassBuffer(TCatCmdFactory::Class(),this);
   }
}

//______________________________________________________________________________
void TCatCmdFactory::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCatCmdFactory.
      TClass *R__cl = ::TCatCmdFactory::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCmds", &fCmds);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TCatCmdFactory(void *p) {
      delete ((::TCatCmdFactory*)p);
   }
   static void deleteArray_TCatCmdFactory(void *p) {
      delete [] ((::TCatCmdFactory*)p);
   }
   static void destruct_TCatCmdFactory(void *p) {
      typedef ::TCatCmdFactory current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TCatCmdFactory

/********************************************************
* catcmd_dict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablecatcmd_dict();

extern "C" void G__set_cpp_environmentcatcmd_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TCatCmdFactory.h");
  G__add_compiledheader("TCatCmd.h");
  G__add_compiledheader("TCatCmdHelp.h");
  G__add_compiledheader("TCatCmdHt.h");
  G__add_compiledheader("TCatCmdHtp.h");
  G__add_compiledheader("TCatCmdHb.h");
  G__add_compiledheader("TCatCmdHn.h");
  G__add_compiledheader("TCatCmdZone.h");
  G__add_compiledheader("TCatCmdPr.h");
  G__add_compiledheader("TCatCmdPrx.h");
  G__add_compiledheader("TCatCmdPry.h");
  G__add_compiledheader("TCatCmdBn.h");
  G__add_compiledheader("TCatCmdBnx.h");
  G__add_compiledheader("TCatCmdBny.h");
  G__add_compiledheader("TCatCmdSl.h");
  G__add_compiledheader("TCatCmdSly.h");
  G__add_compiledheader("TCatCmdLs.h");
  G__add_compiledheader("TCatCmdLoopAdd.h");
  G__add_compiledheader("TCatCmdLoopSuspend.h");
  G__add_compiledheader("TCatCmdLoopResume.h");
  G__add_compiledheader("TCatCmdCd.h");
  G__cpp_reset_tagtablecatcmd_dict();
}
#include <new>
extern "C" int G__cpp_dllrevcatcmd_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCatCmd */
static int G__catcmd_dict_177_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmd*) G__getstructoffset())->Exec(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_177_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmd*) G__getstructoffset())->Cmd(*((vector<TString>*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_177_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((TCatCmd*) G__getstructoffset())->GetRange(*(TString*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((TCatCmd*) G__getstructoffset())->GetRange(*(TString*) libp->para[0].ref, *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_177_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmd*) G__getstructoffset())->Help();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmd G__TTCatCmd;
static int G__catcmd_dict_177_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmd*) (soff+(sizeof(TCatCmd)*i)))->~G__TTCatCmd();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmd*) (soff))->~G__TTCatCmd();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_177_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmd* dest = (TCatCmd*) G__getstructoffset();
   *dest = *(TCatCmd*) libp->para[0].ref;
   const TCatCmd& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdFactory */
static int G__catcmd_dict_182_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdFactory::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdFactory*) G__getstructoffset())->ProcessLine(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdFactory*) G__getstructoffset())->Register((TCatCmd*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TCatCmdFactory*) G__getstructoffset())->Help(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((TCatCmdFactory*) G__getstructoffset())->Help();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdFactory::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdFactory::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdFactory::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdFactory::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdFactory*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdFactory::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdFactory::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdFactory::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_182_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdFactory::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_182_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdFactory* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdFactory(*(TCatCmdFactory*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdFactory G__TTCatCmdFactory;
static int G__catcmd_dict_182_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdFactory*) (soff+(sizeof(TCatCmdFactory)*i)))->~G__TTCatCmdFactory();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdFactory*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdFactory*) (soff))->~G__TTCatCmdFactory();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_182_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdFactory* dest = (TCatCmdFactory*) G__getstructoffset();
   *dest = *(TCatCmdFactory*) libp->para[0].ref;
   const TCatCmdFactory& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdHelp */
static int G__catcmd_dict_183_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHelp::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHelp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHelp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdHelp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdHelp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdHelp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHelp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHelp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHelp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_183_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHelp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_183_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdHelp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdHelp(*(TCatCmdHelp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdHelp G__TTCatCmdHelp;
static int G__catcmd_dict_183_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdHelp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdHelp*) (soff+(sizeof(TCatCmdHelp)*i)))->~G__TTCatCmdHelp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdHelp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdHelp*) (soff))->~G__TTCatCmdHelp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_183_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdHelp* dest = (TCatCmdHelp*) G__getstructoffset();
   *dest = *(TCatCmdHelp*) libp->para[0].ref;
   const TCatCmdHelp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdHt */
static int G__catcmd_dict_184_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHt::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdHt*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TString*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdHt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdHt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdHt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_184_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_184_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdHt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdHt(*(TCatCmdHt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdHt G__TTCatCmdHt;
static int G__catcmd_dict_184_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdHt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdHt*) (soff+(sizeof(TCatCmdHt)*i)))->~G__TTCatCmdHt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdHt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdHt*) (soff))->~G__TTCatCmdHt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_184_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdHt* dest = (TCatCmdHt*) G__getstructoffset();
   *dest = *(TCatCmdHt*) libp->para[0].ref;
   const TCatCmdHt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdHtp */
static int G__catcmd_dict_185_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHtp::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdHtp*) G__getstructoffset())->Run(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHtp::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHtp::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdHtp::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdHtp::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdHtp*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHtp::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHtp::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHtp::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_185_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHtp::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_185_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdHtp* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdHtp(*(TCatCmdHtp*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdHtp G__TTCatCmdHtp;
static int G__catcmd_dict_185_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdHtp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdHtp*) (soff+(sizeof(TCatCmdHtp)*i)))->~G__TTCatCmdHtp();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdHtp*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdHtp*) (soff))->~G__TTCatCmdHtp();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_185_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdHtp* dest = (TCatCmdHtp*) G__getstructoffset();
   *dest = *(TCatCmdHtp*) libp->para[0].ref;
   const TCatCmdHtp& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdHb */
static int G__catcmd_dict_186_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHb::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdHb*) G__getstructoffset())->Run(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdHb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdHb::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdHb*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_186_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_186_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdHb* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdHb(*(TCatCmdHb*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdHb G__TTCatCmdHb;
static int G__catcmd_dict_186_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdHb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdHb*) (soff+(sizeof(TCatCmdHb)*i)))->~G__TTCatCmdHb();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdHb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdHb*) (soff))->~G__TTCatCmdHb();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_186_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdHb* dest = (TCatCmdHb*) G__getstructoffset();
   *dest = *(TCatCmdHb*) libp->para[0].ref;
   const TCatCmdHb& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdHn */
static int G__catcmd_dict_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHn::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdHn*) G__getstructoffset())->Run(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdHn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdHn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdHn::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdHn*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdHn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_187_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdHn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_187_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdHn* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdHn(*(TCatCmdHn*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdHn G__TTCatCmdHn;
static int G__catcmd_dict_187_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdHn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdHn*) (soff+(sizeof(TCatCmdHn)*i)))->~G__TTCatCmdHn();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdHn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdHn*) (soff))->~G__TTCatCmdHn();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_187_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdHn* dest = (TCatCmdHn*) G__getstructoffset();
   *dest = *(TCatCmdHn*) libp->para[0].ref;
   const TCatCmdHn& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdZone */
static int G__catcmd_dict_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdZone::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdZone*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdZone::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdZone::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdZone::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdZone::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdZone*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdZone::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdZone::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdZone::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdZone::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdZone* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdZone(*(TCatCmdZone*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdZone G__TTCatCmdZone;
static int G__catcmd_dict_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdZone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdZone*) (soff+(sizeof(TCatCmdZone)*i)))->~G__TTCatCmdZone();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdZone*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdZone*) (soff))->~G__TTCatCmdZone();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdZone* dest = (TCatCmdZone*) G__getstructoffset();
   *dest = *(TCatCmdZone*) libp->para[0].ref;
   const TCatCmdZone& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdPr */
static int G__catcmd_dict_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 108, (long) ((TCatCmdPr*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 108, (long) ((TCatCmdPr*) G__getstructoffset())->Run((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCatCmdPr*) G__getstructoffset())->Run((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdPr::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPr::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdPr::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdPr::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdPr*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPr::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPr::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPr::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPr::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdPr* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdPr(*(TCatCmdPr*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdPr G__TTCatCmdPr;
static int G__catcmd_dict_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdPr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdPr*) (soff+(sizeof(TCatCmdPr)*i)))->~G__TTCatCmdPr();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdPr*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdPr*) (soff))->~G__TTCatCmdPr();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdPr* dest = (TCatCmdPr*) G__getstructoffset();
   *dest = *(TCatCmdPr*) libp->para[0].ref;
   const TCatCmdPr& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdPrx */
static int G__catcmd_dict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdPrx::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdPrx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPrx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdPrx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdPrx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdPrx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPrx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPrx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPrx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPrx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdPrx* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdPrx(*(TCatCmdPrx*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdPrx G__TTCatCmdPrx;
static int G__catcmd_dict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdPrx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdPrx*) (soff+(sizeof(TCatCmdPrx)*i)))->~G__TTCatCmdPrx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdPrx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdPrx*) (soff))->~G__TTCatCmdPrx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdPrx* dest = (TCatCmdPrx*) G__getstructoffset();
   *dest = *(TCatCmdPrx*) libp->para[0].ref;
   const TCatCmdPrx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdPry */
static int G__catcmd_dict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdPry::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdPry::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPry::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdPry::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdPry::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdPry*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPry::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPry::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdPry::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdPry::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdPry* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdPry(*(TCatCmdPry*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdPry G__TTCatCmdPry;
static int G__catcmd_dict_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdPry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdPry*) (soff+(sizeof(TCatCmdPry)*i)))->~G__TTCatCmdPry();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdPry*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdPry*) (soff))->~G__TTCatCmdPry();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdPry* dest = (TCatCmdPry*) G__getstructoffset();
   *dest = *(TCatCmdPry*) libp->para[0].ref;
   const TCatCmdPry& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdBn */
static int G__catcmd_dict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCatCmdBn*) G__getstructoffset())->Run((TH2*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdBn::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBn::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdBn::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdBn::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdBn*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBn::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBn::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBn::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBn::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdBn* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdBn(*(TCatCmdBn*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdBn G__TTCatCmdBn;
static int G__catcmd_dict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdBn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdBn*) (soff+(sizeof(TCatCmdBn)*i)))->~G__TTCatCmdBn();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdBn*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdBn*) (soff))->~G__TTCatCmdBn();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdBn* dest = (TCatCmdBn*) G__getstructoffset();
   *dest = *(TCatCmdBn*) libp->para[0].ref;
   const TCatCmdBn& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdBnx */
static int G__catcmd_dict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdBnx::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdBnx::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBnx::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdBnx::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdBnx::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdBnx*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBnx::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBnx::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBnx::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBnx::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdBnx* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdBnx(*(TCatCmdBnx*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdBnx G__TTCatCmdBnx;
static int G__catcmd_dict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdBnx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdBnx*) (soff+(sizeof(TCatCmdBnx)*i)))->~G__TTCatCmdBnx();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdBnx*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdBnx*) (soff))->~G__TTCatCmdBnx();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdBnx* dest = (TCatCmdBnx*) G__getstructoffset();
   *dest = *(TCatCmdBnx*) libp->para[0].ref;
   const TCatCmdBnx& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdBny */
static int G__catcmd_dict_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdBny::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdBny::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBny::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdBny::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdBny::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdBny*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBny::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBny::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdBny::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdBny::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdBny* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdBny(*(TCatCmdBny*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdBny G__TTCatCmdBny;
static int G__catcmd_dict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdBny*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdBny*) (soff+(sizeof(TCatCmdBny)*i)))->~G__TTCatCmdBny();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdBny*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdBny*) (soff))->~G__TTCatCmdBny();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdBny* dest = (TCatCmdBny*) G__getstructoffset();
   *dest = *(TCatCmdBny*) libp->para[0].ref;
   const TCatCmdBny& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdSl */
static int G__catcmd_dict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdSl* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TCatCmdSl(*(TCatCmdSl::EAxis*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TCatCmdSl(*(TCatCmdSl::EAxis*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TCatCmdSl*) G__getstructoffset())->Run((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdSl::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSl::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdSl::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdSl::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdSl*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSl::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdSl::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSl::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdSl::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdSl* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdSl(*(TCatCmdSl*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdSl G__TTCatCmdSl;
static int G__catcmd_dict_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdSl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdSl*) (soff+(sizeof(TCatCmdSl)*i)))->~G__TTCatCmdSl();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdSl*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdSl*) (soff))->~G__TTCatCmdSl();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdSl* dest = (TCatCmdSl*) G__getstructoffset();
   *dest = *(TCatCmdSl*) libp->para[0].ref;
   const TCatCmdSl& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdSly */
static int G__catcmd_dict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdSly::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdSly::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSly::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdSly::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdSly::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdSly*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSly::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdSly::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdSly::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdSly::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_201_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdSly* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdSly(*(TCatCmdSly*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdSly G__TTCatCmdSly;
static int G__catcmd_dict_201_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdSly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdSly*) (soff+(sizeof(TCatCmdSly)*i)))->~G__TTCatCmdSly();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdSly*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdSly*) (soff))->~G__TTCatCmdSly();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_201_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdSly* dest = (TCatCmdSly*) G__getstructoffset();
   *dest = *(TCatCmdSly*) libp->para[0].ref;
   const TCatCmdSly& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdLs */
static int G__catcmd_dict_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLs::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 108, (long) ((TCatCmdLs*) G__getstructoffset())->Run(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLs::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLs::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdLs::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdLs::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdLs*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLs::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLs::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLs::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLs::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdLs* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdLs(*(TCatCmdLs*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdLs G__TTCatCmdLs;
static int G__catcmd_dict_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdLs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdLs*) (soff+(sizeof(TCatCmdLs)*i)))->~G__TTCatCmdLs();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdLs*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdLs*) (soff))->~G__TTCatCmdLs();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_202_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdLs* dest = (TCatCmdLs*) G__getstructoffset();
   *dest = *(TCatCmdLs*) libp->para[0].ref;
   const TCatCmdLs& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdLoopAdd */
static int G__catcmd_dict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopAdd::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopAdd::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopAdd::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdLoopAdd::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdLoopAdd::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdLoopAdd*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopAdd::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopAdd::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopAdd::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopAdd::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdLoopAdd* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdLoopAdd(*(TCatCmdLoopAdd*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdLoopAdd G__TTCatCmdLoopAdd;
static int G__catcmd_dict_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdLoopAdd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdLoopAdd*) (soff+(sizeof(TCatCmdLoopAdd)*i)))->~G__TTCatCmdLoopAdd();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdLoopAdd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdLoopAdd*) (soff))->~G__TTCatCmdLoopAdd();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdLoopAdd* dest = (TCatCmdLoopAdd*) G__getstructoffset();
   *dest = *(TCatCmdLoopAdd*) libp->para[0].ref;
   const TCatCmdLoopAdd& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdLoopSuspend */
static int G__catcmd_dict_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopSuspend::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopSuspend::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopSuspend::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdLoopSuspend::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdLoopSuspend::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdLoopSuspend*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopSuspend::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopSuspend::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopSuspend::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopSuspend::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdLoopSuspend* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdLoopSuspend(*(TCatCmdLoopSuspend*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdLoopSuspend G__TTCatCmdLoopSuspend;
static int G__catcmd_dict_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdLoopSuspend*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdLoopSuspend*) (soff+(sizeof(TCatCmdLoopSuspend)*i)))->~G__TTCatCmdLoopSuspend();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdLoopSuspend*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdLoopSuspend*) (soff))->~G__TTCatCmdLoopSuspend();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdLoopSuspend* dest = (TCatCmdLoopSuspend*) G__getstructoffset();
   *dest = *(TCatCmdLoopSuspend*) libp->para[0].ref;
   const TCatCmdLoopSuspend& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdLoopResume */
static int G__catcmd_dict_205_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopResume::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdLoopResume::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopResume::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdLoopResume::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdLoopResume::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdLoopResume*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopResume::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopResume::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdLoopResume::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_205_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdLoopResume::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_205_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdLoopResume* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdLoopResume(*(TCatCmdLoopResume*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdLoopResume G__TTCatCmdLoopResume;
static int G__catcmd_dict_205_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdLoopResume*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdLoopResume*) (soff+(sizeof(TCatCmdLoopResume)*i)))->~G__TTCatCmdLoopResume();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdLoopResume*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdLoopResume*) (soff))->~G__TTCatCmdLoopResume();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_205_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdLoopResume* dest = (TCatCmdLoopResume*) G__getstructoffset();
   *dest = *(TCatCmdLoopResume*) libp->para[0].ref;
   const TCatCmdLoopResume& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TCatCmdCd */
static int G__catcmd_dict_206_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdCd::Instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCatCmdCd::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdCd::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCatCmdCd::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCatCmdCd::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCatCmdCd*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdCd::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdCd::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCatCmdCd::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__catcmd_dict_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCatCmdCd::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__catcmd_dict_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCatCmdCd* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCatCmdCd(*(TCatCmdCd*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCatCmdCd G__TTCatCmdCd;
static int G__catcmd_dict_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCatCmdCd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCatCmdCd*) (soff+(sizeof(TCatCmdCd)*i)))->~G__TTCatCmdCd();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCatCmdCd*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCatCmdCd*) (soff))->~G__TTCatCmdCd();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__catcmd_dict_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCatCmdCd* dest = (TCatCmdCd*) G__getstructoffset();
   *dest = *(TCatCmdCd*) libp->para[0].ref;
   const TCatCmdCd& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCatCmd */

/* TCatCmdFactory */

/* TCatCmdHelp */

/* TCatCmdHt */

/* TCatCmdHtp */

/* TCatCmdHb */

/* TCatCmdHn */

/* TCatCmdZone */

/* TCatCmdPr */

/* TCatCmdPrx */

/* TCatCmdPry */

/* TCatCmdBn */

/* TCatCmdBnx */

/* TCatCmdBny */

/* TCatCmdSl */

/* TCatCmdSly */

/* TCatCmdLs */

/* TCatCmdLoopAdd */

/* TCatCmdLoopSuspend */

/* TCatCmdLoopResume */

/* TCatCmdCd */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunccatcmd_dict {
 public:
  G__Sizep2memfunccatcmd_dict(): p(&G__Sizep2memfunccatcmd_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunccatcmd_dict::*p)();
};

size_t G__get_sizep2memfunccatcmd_dict()
{
  G__Sizep2memfunccatcmd_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancecatcmd_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd))) {
     TCatCmd *G__Lderived;
     G__Lderived=(TCatCmd*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory))) {
     TCatCmdFactory *G__Lderived;
     G__Lderived=(TCatCmdFactory*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp))) {
     TCatCmdHelp *G__Lderived;
     G__Lderived=(TCatCmdHelp*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt))) {
     TCatCmdHt *G__Lderived;
     G__Lderived=(TCatCmdHt*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp))) {
     TCatCmdHtp *G__Lderived;
     G__Lderived=(TCatCmdHtp*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb))) {
     TCatCmdHb *G__Lderived;
     G__Lderived=(TCatCmdHb*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn))) {
     TCatCmdHn *G__Lderived;
     G__Lderived=(TCatCmdHn*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone))) {
     TCatCmdZone *G__Lderived;
     G__Lderived=(TCatCmdZone*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr))) {
     TCatCmdPr *G__Lderived;
     G__Lderived=(TCatCmdPr*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx))) {
     TCatCmdPrx *G__Lderived;
     G__Lderived=(TCatCmdPrx*)0x1000;
     {
       TCatCmdPr *G__Lpbase=(TCatCmdPr*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry))) {
     TCatCmdPry *G__Lderived;
     G__Lderived=(TCatCmdPry*)0x1000;
     {
       TCatCmdPr *G__Lpbase=(TCatCmdPr*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn))) {
     TCatCmdBn *G__Lderived;
     G__Lderived=(TCatCmdBn*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx))) {
     TCatCmdBnx *G__Lderived;
     G__Lderived=(TCatCmdBnx*)0x1000;
     {
       TCatCmdBn *G__Lpbase=(TCatCmdBn*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny))) {
     TCatCmdBny *G__Lderived;
     G__Lderived=(TCatCmdBny*)0x1000;
     {
       TCatCmdBn *G__Lpbase=(TCatCmdBn*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl))) {
     TCatCmdSl *G__Lderived;
     G__Lderived=(TCatCmdSl*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly))) {
     TCatCmdSly *G__Lderived;
     G__Lderived=(TCatCmdSly*)0x1000;
     {
       TCatCmdSl *G__Lpbase=(TCatCmdSl*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs))) {
     TCatCmdLs *G__Lderived;
     G__Lderived=(TCatCmdLs*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd))) {
     TCatCmdLoopAdd *G__Lderived;
     G__Lderived=(TCatCmdLoopAdd*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend))) {
     TCatCmdLoopSuspend *G__Lderived;
     G__Lderived=(TCatCmdLoopSuspend*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume))) {
     TCatCmdLoopResume *G__Lderived;
     G__Lderived=(TCatCmdLoopResume*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd))) {
     TCatCmdCd *G__Lderived;
     G__Lderived=(TCatCmdCd*)0x1000;
     {
       TCatCmd *G__Lpbase=(TCatCmd*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd),G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd),G__get_linked_tagnum(&G__catcmd_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd),G__get_linked_tagnum(&G__catcmd_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablecatcmd_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Long_t",108,-1,0,-1);
   G__setnewtype(-1,"Signed long integer 8 bytes (long)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__catcmd_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EAxis",117,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis),0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EAxis",117,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBncLcLEAxis),0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("EAxis",117,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSlcLcLEAxis),0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCatCmd */
static void G__setup_memvarTCatCmd(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd));
   { TCatCmd *p; p=(TCatCmd*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TCatCmdFactory */
static void G__setup_memvarTCatCmdFactory(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory));
   { TCatCmdFactory *p; p=(TCatCmdFactory*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TObjArray),-1,-1,4,"fCmds=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdHelp */
static void G__setup_memvarTCatCmdHelp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp));
   { TCatCmdHelp *p; p=(TCatCmdHelp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdHt */
static void G__setup_memvarTCatCmdHt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt));
   { TCatCmdHt *p; p=(TCatCmdHt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdHtp */
static void G__setup_memvarTCatCmdHtp(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp));
   { TCatCmdHtp *p; p=(TCatCmdHtp*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdHb */
static void G__setup_memvarTCatCmdHb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb));
   { TCatCmdHb *p; p=(TCatCmdHb*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdHn */
static void G__setup_memvarTCatCmdHn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn));
   { TCatCmdHn *p; p=(TCatCmdHn*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdZone */
static void G__setup_memvarTCatCmdZone(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone));
   { TCatCmdZone *p; p=(TCatCmdZone*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdPr */
static void G__setup_memvarTCatCmdPr(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr));
   { TCatCmdPr *p; p=(TCatCmdPr*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kX=%lldLL",(long long)TCatCmdPr::kX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kY=%lldLL",(long long)TCatCmdPr::kY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kZ=%lldLL",(long long)TCatCmdPr::kZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis),G__defined_typename("EAxis"),-1,2,"fAxis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdPrx */
static void G__setup_memvarTCatCmdPrx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx));
   { TCatCmdPrx *p; p=(TCatCmdPrx*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdPry */
static void G__setup_memvarTCatCmdPry(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry));
   { TCatCmdPry *p; p=(TCatCmdPry*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdBn */
static void G__setup_memvarTCatCmdBn(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn));
   { TCatCmdBn *p; p=(TCatCmdBn*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBncLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kX=%lldLL",(long long)TCatCmdBn::kX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBncLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kY=%lldLL",(long long)TCatCmdBn::kY).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBncLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kZ=%lldLL",(long long)TCatCmdBn::kZ).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBncLcLEAxis),G__defined_typename("EAxis"),-1,2,"fAxis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdBnx */
static void G__setup_memvarTCatCmdBnx(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx));
   { TCatCmdBnx *p; p=(TCatCmdBnx*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdBny */
static void G__setup_memvarTCatCmdBny(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny));
   { TCatCmdBny *p; p=(TCatCmdBny*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdSl */
static void G__setup_memvarTCatCmdSl(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl));
   { TCatCmdSl *p; p=(TCatCmdSl*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSlcLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kX=%lldLL",(long long)TCatCmdSl::kX).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSlcLcLEAxis),-1,-2,1,G__FastAllocString(2048).Format("kY=%lldLL",(long long)TCatCmdSl::kY).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSlcLcLEAxis),G__defined_typename("EAxis"),-1,2,"fAxis=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdSly */
static void G__setup_memvarTCatCmdSly(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly));
   { TCatCmdSly *p; p=(TCatCmdSly*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdLs */
static void G__setup_memvarTCatCmdLs(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs));
   { TCatCmdLs *p; p=(TCatCmdLs*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdLoopAdd */
static void G__setup_memvarTCatCmdLoopAdd(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd));
   { TCatCmdLoopAdd *p; p=(TCatCmdLoopAdd*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdLoopSuspend */
static void G__setup_memvarTCatCmdLoopSuspend(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend));
   { TCatCmdLoopSuspend *p; p=(TCatCmdLoopSuspend*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdLoopResume */
static void G__setup_memvarTCatCmdLoopResume(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume));
   { TCatCmdLoopResume *p; p=(TCatCmdLoopResume*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TCatCmdCd */
static void G__setup_memvarTCatCmdCd(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd));
   { TCatCmdCd *p; p=(TCatCmdCd*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__catcmd_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarcatcmd_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCatCmd(void) {
   /* TCatCmd */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd));
   G__memfunc_setup("Exec",389,G__catcmd_dict_177_0_2, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Cmd",276,G__catcmd_dict_177_0_3, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetRange",781,G__catcmd_dict_177_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TString' - 1 - arg i - 'Int_t' 1 - id1 "
"i - 'Int_t' 1 - id2 u 'TString' - 0 '\":\"' delim", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsSortable",1016,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,G__catcmd_dict_177_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~TCatCmd", 766, G__catcmd_dict_177_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_177_0_9, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmd), -1, 1, 1, 1, 1, 0, "u 'TCatCmd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdFactory(void) {
   /* TCatCmdFactory */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory));
   G__memfunc_setup("TCatCmdFactory",1368,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_182_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdFactory* (*)())(&TCatCmdFactory::Instance) ), 0);
   G__memfunc_setup("ProcessLine",1127,G__catcmd_dict_182_0_3, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 0 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Register",837,G__catcmd_dict_182_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCatCmd' - 0 - cmd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,G__catcmd_dict_182_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' cmd", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_182_0_6, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdFactory::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_182_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdFactory::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_182_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdFactory::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_182_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdFactory::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_182_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_182_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdFactory::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_182_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdFactory::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_182_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdFactory::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_182_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdFactory::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdFactory", 1368, G__catcmd_dict_182_0_18, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory), -1, 0, 1, 1, 1, 0, "u 'TCatCmdFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdFactory", 1494, G__catcmd_dict_182_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_182_0_20, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdFactory), -1, 1, 1, 1, 1, 0, "u 'TCatCmdFactory' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdHelp(void) {
   /* TCatCmdHelp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp));
   G__memfunc_setup("TCatCmdHelp",1033,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_183_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdHelp* (*)())(&TCatCmdHelp::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_183_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdHelp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_183_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHelp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_183_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdHelp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_183_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdHelp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_183_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_183_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHelp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_183_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHelp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_183_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHelp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_183_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHelp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdHelp", 1033, G__catcmd_dict_183_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp), -1, 0, 1, 1, 1, 0, "u 'TCatCmdHelp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdHelp", 1159, G__catcmd_dict_183_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_183_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHelp), -1, 1, 1, 1, 1, 0, "u 'TCatCmdHelp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdHt(void) {
   /* TCatCmdHt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt));
   G__memfunc_setup("TCatCmdHt",828,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_184_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdHt* (*)())(&TCatCmdHt::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_184_0_4, 108, -1, G__defined_typename("Long_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - id1 i - 'Int_t' 0 - id2 "
"u 'TString' - 1 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_184_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdHt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_184_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_184_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdHt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_184_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdHt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_184_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_184_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_184_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_184_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_184_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdHt", 828, G__catcmd_dict_184_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt), -1, 0, 1, 1, 1, 0, "u 'TCatCmdHt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdHt", 954, G__catcmd_dict_184_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_184_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHt), -1, 1, 1, 1, 1, 0, "u 'TCatCmdHt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdHtp(void) {
   /* TCatCmdHtp */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp));
   G__memfunc_setup("TCatCmdHtp",940,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_185_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdHtp* (*)())(&TCatCmdHtp::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_185_0_4, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_185_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdHtp::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_185_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHtp::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_185_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdHtp::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_185_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdHtp::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_185_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_185_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHtp::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_185_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHtp::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_185_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHtp::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_185_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHtp::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdHtp", 940, G__catcmd_dict_185_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp), -1, 0, 1, 1, 1, 0, "u 'TCatCmdHtp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdHtp", 1066, G__catcmd_dict_185_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_185_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHtp), -1, 1, 1, 1, 1, 0, "u 'TCatCmdHtp' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdHb(void) {
   /* TCatCmdHb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb));
   G__memfunc_setup("TCatCmdHb",810,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_186_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdHb* (*)())(&TCatCmdHb::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_186_0_4, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_186_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdHb::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_186_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHb::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_186_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdHb::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_186_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdHb::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_186_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_186_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHb::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_186_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHb::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_186_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHb::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_186_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHb::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdHb", 810, G__catcmd_dict_186_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb), -1, 0, 1, 1, 1, 0, "u 'TCatCmdHb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdHb", 936, G__catcmd_dict_186_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_186_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHb), -1, 1, 1, 1, 1, 0, "u 'TCatCmdHb' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdHn(void) {
   /* TCatCmdHn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn));
   G__memfunc_setup("TCatCmdHn",822,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_187_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdHn* (*)())(&TCatCmdHn::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_187_0_4, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_187_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdHn::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_187_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHn::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_187_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdHn::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_187_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdHn::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_187_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_187_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHn::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_187_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHn::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_187_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdHn::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_187_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdHn::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdHn", 822, G__catcmd_dict_187_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn), -1, 0, 1, 1, 1, 0, "u 'TCatCmdHn' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdHn", 948, G__catcmd_dict_187_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_187_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdHn), -1, 1, 1, 1, 1, 0, "u 'TCatCmdHn' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdZone(void) {
   /* TCatCmdZone */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone));
   G__memfunc_setup("TCatCmdZone",1052,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_188_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdZone* (*)())(&TCatCmdZone::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - tokens", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_188_0_4, 108, -1, G__defined_typename("Long_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nx i - 'Int_t' 0 - ny "
"f - 'Float_t' 0 - xmargin f - 'Float_t' 0 - ymargin", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_188_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdZone::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_188_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdZone::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_188_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdZone::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_188_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdZone::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_188_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_188_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdZone::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_188_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdZone::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_188_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdZone::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_188_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdZone::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdZone", 1052, G__catcmd_dict_188_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone), -1, 0, 1, 1, 1, 0, "u 'TCatCmdZone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdZone", 1178, G__catcmd_dict_188_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_188_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdZone), -1, 1, 1, 1, 1, 0, "u 'TCatCmdZone' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdPr(void) {
   /* TCatCmdPr */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr));
   G__memfunc_setup("TCatCmdPr",834,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr), -1, 0, 1, 1, 2, 0, "u 'TCatCmdPr::EAxis' 'TCatCmdPr::EAxis' 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_191_0_3, 108, -1, G__defined_typename("Long_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - id1 i - 'Int_t' 0 '-1' id2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_191_0_4, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TH1), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_191_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdPr::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_191_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPr::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_191_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdPr::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_191_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdPr::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_191_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_191_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPr::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_191_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPr::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_191_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPr::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_191_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPr::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdPr", 834, G__catcmd_dict_191_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr), -1, 0, 1, 1, 1, 0, "u 'TCatCmdPr' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdPr", 960, G__catcmd_dict_191_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_191_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPr), -1, 1, 1, 1, 1, 0, "u 'TCatCmdPr' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdPrx(void) {
   /* TCatCmdPrx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx));
   G__memfunc_setup("TCatCmdPrx",954,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_193_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdPrx* (*)())(&TCatCmdPrx::Instance) ), 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_193_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdPrx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_193_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPrx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_193_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdPrx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_193_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdPrx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_193_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_193_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPrx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_193_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPrx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_193_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPrx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_193_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPrx::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdPrx", 954, G__catcmd_dict_193_0_15, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx), -1, 0, 1, 1, 1, 0, "u 'TCatCmdPrx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdPrx", 1080, G__catcmd_dict_193_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_193_0_17, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPrx), -1, 1, 1, 1, 1, 0, "u 'TCatCmdPrx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdPry(void) {
   /* TCatCmdPry */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry));
   G__memfunc_setup("TCatCmdPry",955,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_194_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdPry* (*)())(&TCatCmdPry::Instance) ), 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_194_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdPry::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_194_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPry::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_194_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdPry::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_194_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdPry::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_194_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_194_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPry::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_194_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPry::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_194_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdPry::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_194_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdPry::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdPry", 955, G__catcmd_dict_194_0_15, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry), -1, 0, 1, 1, 1, 0, "u 'TCatCmdPry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdPry", 1081, G__catcmd_dict_194_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_194_0_17, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdPry), -1, 1, 1, 1, 1, 0, "u 'TCatCmdPry' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdBn(void) {
   /* TCatCmdBn */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn));
   G__memfunc_setup("TCatCmdBn",816,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn), -1, 0, 1, 1, 2, 0, "u 'TCatCmdBn::EAxis' 'TCatCmdBn::EAxis' 0 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_195_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH2' - 0 - h2 f - 'Float_t' 0 - start "
"f - 'Float_t' 0 - end", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_195_0_4, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdBn::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_195_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBn::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_195_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdBn::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_195_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdBn::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_195_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_195_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBn::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_195_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBn::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_195_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBn::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_195_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBn::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdBn", 816, G__catcmd_dict_195_0_16, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn), -1, 0, 1, 1, 1, 0, "u 'TCatCmdBn' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdBn", 942, G__catcmd_dict_195_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_195_0_18, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBn), -1, 1, 1, 1, 1, 0, "u 'TCatCmdBn' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdBnx(void) {
   /* TCatCmdBnx */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx));
   G__memfunc_setup("TCatCmdBnx",936,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_197_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdBnx* (*)())(&TCatCmdBnx::Instance) ), 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_197_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdBnx::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_197_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBnx::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_197_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdBnx::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_197_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdBnx::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_197_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_197_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBnx::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_197_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBnx::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_197_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBnx::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_197_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBnx::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdBnx", 936, G__catcmd_dict_197_0_15, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx), -1, 0, 1, 1, 1, 0, "u 'TCatCmdBnx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdBnx", 1062, G__catcmd_dict_197_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_197_0_17, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBnx), -1, 1, 1, 1, 1, 0, "u 'TCatCmdBnx' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdBny(void) {
   /* TCatCmdBny */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny));
   G__memfunc_setup("TCatCmdBny",937,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_198_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdBny* (*)())(&TCatCmdBny::Instance) ), 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_198_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdBny::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_198_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBny::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_198_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdBny::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_198_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdBny::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_198_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_198_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBny::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_198_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBny::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_198_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdBny::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_198_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdBny::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdBny", 937, G__catcmd_dict_198_0_15, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny), -1, 0, 1, 1, 1, 0, "u 'TCatCmdBny' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdBny", 1063, G__catcmd_dict_198_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_198_0_17, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdBny), -1, 1, 1, 1, 1, 0, "u 'TCatCmdBny' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdSl(void) {
   /* TCatCmdSl */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl));
   G__memfunc_setup("TCatCmdSl",831,G__catcmd_dict_199_0_1, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl), -1, 0, 1, 1, 1, 0, "u 'TCatCmdSl::EAxis' 'TCatCmdSl::EAxis' 11 - axis", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_199_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TH1), -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_199_0_4, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdSl::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_199_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSl::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_199_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdSl::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_199_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdSl::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_199_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_199_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSl::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_199_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdSl::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_199_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSl::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_199_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdSl::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdSl", 831, G__catcmd_dict_199_0_16, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl), -1, 0, 1, 1, 1, 0, "u 'TCatCmdSl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdSl", 957, G__catcmd_dict_199_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_199_0_18, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSl), -1, 1, 1, 1, 1, 0, "u 'TCatCmdSl' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdSly(void) {
   /* TCatCmdSly */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly));
   G__memfunc_setup("TCatCmdSly",952,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_201_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdSly* (*)())(&TCatCmdSly::Instance) ), 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_201_0_3, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdSly::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_201_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSly::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_201_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdSly::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_201_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdSly::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_201_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_201_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSly::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_201_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdSly::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_201_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdSly::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_201_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdSly::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdSly", 952, G__catcmd_dict_201_0_15, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly), -1, 0, 1, 1, 1, 0, "u 'TCatCmdSly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdSly", 1078, G__catcmd_dict_201_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_201_0_17, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdSly), -1, 1, 1, 1, 1, 0, "u 'TCatCmdSly' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdLs(void) {
   /* TCatCmdLs */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs));
   G__memfunc_setup("TCatCmdLs",831,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_202_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdLs* (*)())(&TCatCmdLs::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - tokens", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Run",309,G__catcmd_dict_202_0_4, 108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'TString' - 1 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__catcmd_dict_202_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdLs::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_202_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLs::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_202_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdLs::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_202_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdLs::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_202_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_202_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLs::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_202_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLs::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_202_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLs::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_202_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLs::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdLs", 831, G__catcmd_dict_202_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs), -1, 0, 1, 1, 1, 0, "u 'TCatCmdLs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdLs", 957, G__catcmd_dict_202_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_202_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLs), -1, 1, 1, 1, 1, 0, "u 'TCatCmdLs' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdLoopAdd(void) {
   /* TCatCmdLoopAdd */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd));
   G__memfunc_setup("TCatCmdLoopAdd",1315,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_203_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdLoopAdd* (*)())(&TCatCmdLoopAdd::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_203_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdLoopAdd::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_203_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopAdd::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_203_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdLoopAdd::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_203_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdLoopAdd::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_203_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_203_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopAdd::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_203_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopAdd::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_203_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopAdd::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_203_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopAdd::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdLoopAdd", 1315, G__catcmd_dict_203_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd), -1, 0, 1, 1, 1, 0, "u 'TCatCmdLoopAdd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdLoopAdd", 1441, G__catcmd_dict_203_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_203_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopAdd), -1, 1, 1, 1, 1, 0, "u 'TCatCmdLoopAdd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdLoopSuspend(void) {
   /* TCatCmdLoopSuspend */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend));
   G__memfunc_setup("TCatCmdLoopSuspend",1788,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_204_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdLoopSuspend* (*)())(&TCatCmdLoopSuspend::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_204_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdLoopSuspend::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_204_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopSuspend::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_204_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdLoopSuspend::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_204_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdLoopSuspend::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_204_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_204_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopSuspend::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_204_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopSuspend::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_204_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopSuspend::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_204_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopSuspend::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdLoopSuspend", 1788, G__catcmd_dict_204_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend), -1, 0, 1, 1, 1, 0, "u 'TCatCmdLoopSuspend' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdLoopSuspend", 1914, G__catcmd_dict_204_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_204_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopSuspend), -1, 1, 1, 1, 1, 0, "u 'TCatCmdLoopSuspend' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdLoopResume(void) {
   /* TCatCmdLoopResume */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume));
   G__memfunc_setup("TCatCmdLoopResume",1675,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_205_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdLoopResume* (*)())(&TCatCmdLoopResume::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Help",393,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_205_0_5, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdLoopResume::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_205_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopResume::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_205_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdLoopResume::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_205_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdLoopResume::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_205_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_205_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopResume::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_205_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopResume::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_205_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdLoopResume::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_205_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdLoopResume::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdLoopResume", 1675, G__catcmd_dict_205_0_17, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume), -1, 0, 1, 1, 1, 0, "u 'TCatCmdLoopResume' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdLoopResume", 1801, G__catcmd_dict_205_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_205_0_19, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdLoopResume), -1, 1, 1, 1, 1, 0, "u 'TCatCmdLoopResume' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTCatCmdCd(void) {
   /* TCatCmdCd */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd));
   G__memfunc_setup("TCatCmdCd",807,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Instance",821,G__catcmd_dict_206_0_2, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TCatCmdCd* (*)())(&TCatCmdCd::Instance) ), 0);
   G__memfunc_setup("Cmd",276,(G__InterfaceMethod) NULL,108, -1, G__defined_typename("Long_t"), 0, 1, 1, 1, 0, "u 'vector<TString,allocator<TString> >' 'vector<TString>' 0 - args", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__catcmd_dict_206_0_4, 85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCatCmdCd::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__catcmd_dict_206_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdCd::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__catcmd_dict_206_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCatCmdCd::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__catcmd_dict_206_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCatCmdCd::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__catcmd_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__catcmd_dict_206_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__catcmd_dict_206_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdCd::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__catcmd_dict_206_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdCd::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__catcmd_dict_206_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCatCmdCd::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__catcmd_dict_206_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCatCmdCd::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCatCmdCd", 807, G__catcmd_dict_206_0_16, (int) ('i'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd), -1, 0, 1, 1, 1, 0, "u 'TCatCmdCd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCatCmdCd", 933, G__catcmd_dict_206_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__catcmd_dict_206_0_18, (int) ('u'), G__get_linked_tagnum(&G__catcmd_dictLN_TCatCmdCd), -1, 1, 1, 1, 1, 0, "u 'TCatCmdCd' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunccatcmd_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalcatcmd_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funccatcmd_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__catcmd_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmd = { "TCatCmd" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdFactory = { "TCatCmdFactory" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdHelp = { "TCatCmdHelp" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdHt = { "TCatCmdHt" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdHtp = { "TCatCmdHtp" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdHb = { "TCatCmdHb" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdHn = { "TCatCmdHn" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdZone = { "TCatCmdZone" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdPr = { "TCatCmdPr" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdPrcLcLEAxis = { "TCatCmdPr::EAxis" , 101 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdPrx = { "TCatCmdPrx" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdPry = { "TCatCmdPry" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdBn = { "TCatCmdBn" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdBncLcLEAxis = { "TCatCmdBn::EAxis" , 101 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdBnx = { "TCatCmdBnx" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdBny = { "TCatCmdBny" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdSl = { "TCatCmdSl" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdSlcLcLEAxis = { "TCatCmdSl::EAxis" , 101 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdSly = { "TCatCmdSly" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdLs = { "TCatCmdLs" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdLoopAdd = { "TCatCmdLoopAdd" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdLoopSuspend = { "TCatCmdLoopSuspend" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdLoopResume = { "TCatCmdLoopResume" , 99 , -1 };
G__linked_taginfo G__catcmd_dictLN_TCatCmdCd = { "TCatCmdCd" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablecatcmd_dict() {
  G__catcmd_dictLN_TClass.tagnum = -1 ;
  G__catcmd_dictLN_TBuffer.tagnum = -1 ;
  G__catcmd_dictLN_TMemberInspector.tagnum = -1 ;
  G__catcmd_dictLN_TObject.tagnum = -1 ;
  G__catcmd_dictLN_TNamed.tagnum = -1 ;
  G__catcmd_dictLN_TString.tagnum = -1 ;
  G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__catcmd_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__catcmd_dictLN_TObjArray.tagnum = -1 ;
  G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__catcmd_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmd.tagnum = -1 ;
  G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__catcmd_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdFactory.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdHelp.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdHt.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdHtp.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdHb.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdHn.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdZone.tagnum = -1 ;
  G__catcmd_dictLN_TH1.tagnum = -1 ;
  G__catcmd_dictLN_TH2.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdPr.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdPrcLcLEAxis.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdPrx.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdPry.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdBn.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdBncLcLEAxis.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdBnx.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdBny.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdSl.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdSlcLcLEAxis.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdSly.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdLs.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdLoopAdd.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdLoopSuspend.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdLoopResume.tagnum = -1 ;
  G__catcmd_dictLN_TCatCmdCd.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablecatcmd_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmd),sizeof(TCatCmd),-1,324865,(char*)NULL,G__setup_memvarTCatCmd,G__setup_memfuncTCatCmd);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdFactory),sizeof(TCatCmdFactory),-1,324864,(char*)NULL,G__setup_memvarTCatCmdFactory,G__setup_memfuncTCatCmdFactory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdHelp),sizeof(TCatCmdHelp),-1,324864,(char*)NULL,G__setup_memvarTCatCmdHelp,G__setup_memfuncTCatCmdHelp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdHt),sizeof(TCatCmdHt),-1,324864,(char*)NULL,G__setup_memvarTCatCmdHt,G__setup_memfuncTCatCmdHt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdHtp),sizeof(TCatCmdHtp),-1,62720,(char*)NULL,G__setup_memvarTCatCmdHtp,G__setup_memfuncTCatCmdHtp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdHb),sizeof(TCatCmdHb),-1,62720,(char*)NULL,G__setup_memvarTCatCmdHb,G__setup_memfuncTCatCmdHb);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdHn),sizeof(TCatCmdHn),-1,62720,(char*)NULL,G__setup_memvarTCatCmdHn,G__setup_memfuncTCatCmdHn);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdZone),sizeof(TCatCmdZone),-1,62720,(char*)NULL,G__setup_memvarTCatCmdZone,G__setup_memfuncTCatCmdZone);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TH1);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdPr),sizeof(TCatCmdPr),-1,62464,(char*)NULL,G__setup_memvarTCatCmdPr,G__setup_memfuncTCatCmdPr);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdPrcLcLEAxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdPrx),sizeof(TCatCmdPrx),-1,62720,(char*)NULL,G__setup_memvarTCatCmdPrx,G__setup_memfuncTCatCmdPrx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdPry),sizeof(TCatCmdPry),-1,62720,(char*)NULL,G__setup_memvarTCatCmdPry,G__setup_memfuncTCatCmdPry);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdBn),sizeof(TCatCmdBn),-1,62464,(char*)NULL,G__setup_memvarTCatCmdBn,G__setup_memfuncTCatCmdBn);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdBncLcLEAxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdBnx),sizeof(TCatCmdBnx),-1,62720,(char*)NULL,G__setup_memvarTCatCmdBnx,G__setup_memfuncTCatCmdBnx);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdBny),sizeof(TCatCmdBny),-1,62720,(char*)NULL,G__setup_memvarTCatCmdBny,G__setup_memfuncTCatCmdBny);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdSl),sizeof(TCatCmdSl),-1,62464,(char*)NULL,G__setup_memvarTCatCmdSl,G__setup_memfuncTCatCmdSl);
   G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdSlcLcLEAxis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdSly),sizeof(TCatCmdSly),-1,62720,(char*)NULL,G__setup_memvarTCatCmdSly,G__setup_memfuncTCatCmdSly);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdLs),sizeof(TCatCmdLs),-1,62720,(char*)NULL,G__setup_memvarTCatCmdLs,G__setup_memfuncTCatCmdLs);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdLoopAdd),sizeof(TCatCmdLoopAdd),-1,62720,(char*)NULL,G__setup_memvarTCatCmdLoopAdd,G__setup_memfuncTCatCmdLoopAdd);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdLoopSuspend),sizeof(TCatCmdLoopSuspend),-1,62720,(char*)NULL,G__setup_memvarTCatCmdLoopSuspend,G__setup_memfuncTCatCmdLoopSuspend);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdLoopResume),sizeof(TCatCmdLoopResume),-1,62720,(char*)NULL,G__setup_memvarTCatCmdLoopResume,G__setup_memfuncTCatCmdLoopResume);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__catcmd_dictLN_TCatCmdCd),sizeof(TCatCmdCd),-1,62720,(char*)NULL,G__setup_memvarTCatCmdCd,G__setup_memfuncTCatCmdCd);
}
extern "C" void G__cpp_setupcatcmd_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setupcatcmd_dict()");
  G__set_cpp_environmentcatcmd_dict();
  G__cpp_setup_tagtablecatcmd_dict();

  G__cpp_setup_inheritancecatcmd_dict();

  G__cpp_setup_typetablecatcmd_dict();

  G__cpp_setup_memvarcatcmd_dict();

  G__cpp_setup_memfunccatcmd_dict();
  G__cpp_setup_globalcatcmd_dict();
  G__cpp_setup_funccatcmd_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunccatcmd_dict();
  return;
}
class G__cpp_setup_initcatcmd_dict {
  public:
    G__cpp_setup_initcatcmd_dict() { G__add_setup_func("catcmd_dict",(G__incsetup)(&G__cpp_setupcatcmd_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initcatcmd_dict() { G__remove_setup_func("catcmd_dict"); }
};
G__cpp_setup_initcatcmd_dict G__cpp_setup_initializercatcmd_dict;

